<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Ncontents_m extends MY_Model {


    protected $_table_name = 'new_contents';
    protected $_primary_key = 'ncontent_id';
    protected $_primary_filter = 'intval';
    protected $_order_by = "ncontent_id asc";

    function __construct() {
        parent::__construct();
    }
    function get_ncontents($arr = NULL) {

        $this->db->select('*');
        $this->db->from('new_contents');
        if($arr != NULL)
        {
            $this->db->where($arr);
        }
        $this->db->join('new_content_types', 'new_contents.ncontent_type_id = new_content_types.ncontent_type_id','inner');
        $this->db->join('users', 'ncontent_user_id = users.user_id','inner');

        /*
        $this->db->join('new_coursewares', 'ncontent_ncwid = ncw_id','inner');
        $this->db->join('new_units', 'new_coursewares.nunit_id = new_units.nunit_id','inner');
        $this->db->join('new_childcourses', 'new_units.childcourse_id = new_childcourses.childcourse_id','inner');*/


        $query = $this->db->get();

        return $query->result();
    }

    function insert_ncontents($array)
    {
        $error = parent::insert($array);
        return TRUE;
    }
    function update_ncontents($data, $id = NULL)
    {
        parent::update($data, $id); // TODO: Change the autogenerated stub
        return $id;
    }
    function delete($ncontent_id)
    {
        parent::delete($ncontent_id);
    }
    function get_where($array = NULL)
    {
        return parent::get_where($array); // TODO: Change the autogenerated stub
    }
    function get_single($array = NULL)
    {
        return parent::get_single($array); // TODO: Change the autogenerated stub
    }
    function isDuplication($ncontent_title)
    {
        $query = $this->db->get_where('contents',array('ncontent_title'=>$ncontent_title));
        $results = $query->row();
        $count = $query->num_rows(); //counting result from query
        if ($count === 0) {
            return array('status'=>'NOEXIST','content_path'=>'','content_id'=>'');
        }
        return array('nstatus'=>'EXIST','ncontent_id'=>$results->content_id,'ncontent_path'=>$results->file_name);
    }
    function  searchStudentRecords($userid)
    {
        $this->db->select('*')
                 ->from('new_contents')
                 ->where(array('new_contents.ncontent_type_id !='=>'3','ncontent_user_id'=>$userid))
                 ->join('new_content_types', 'new_contents.ncontent_type_id = new_content_types.ncontent_type_id','inner')
                 ->join('users', 'ncontent_user_id = users.user_id','inner')
                 ->join('new_coursewares', 'ncontent_ncwid = ncw_id','inner')
                 ->join('new_units', 'new_coursewares.nunit_id = new_units.nunit_id','inner')
                 ->join('new_childcourses', 'new_units.childcourse_id = new_childcourses.childcourse_id','inner');
        $query = $this->db->get();
        return $query->result();
    }
}
?>